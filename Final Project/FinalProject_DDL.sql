-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-04-12 15:18:27 EDT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY
-- predefined type, no DDL - XMLTYPE

-- CREATING TABLES
CREATE TABLE appointment (
    appointment_id       NUMBER NOT NULL,
    "Date"               DATE,
    time                 TIMESTAMP,
    deposit_fee          NUMBER,
    customer_customer_id NUMBER NOT NULL,
    employee_employee_id NUMBER NOT NULL
);

ALTER TABLE appointment ADD CONSTRAINT appointment_pk PRIMARY KEY ( appointment_id );

CREATE TABLE availability (
    employee_employee_id NUMBER NOT NULL,
    timeslot_timeslot_id NUMBER NOT NULL
);

ALTER TABLE availability ADD CONSTRAINT availability_pk PRIMARY KEY ( employee_employee_id,
                                                                      timeslot_timeslot_id );

CREATE TABLE customer (
    customer_id NUMBER NOT NULL,
    name        VARCHAR2(100) 
);

ALTER TABLE customer ADD CONSTRAINT customer_pk PRIMARY KEY ( customer_id );

CREATE TABLE emp_hourly (
    employee_id NUMBER NOT NULL,
    hourly_rate NUMBER NOT NULL
);

ALTER TABLE emp_hourly ADD CONSTRAINT emp_hourly_pk PRIMARY KEY ( employee_id );

CREATE TABLE emp_salary (
    employee_id NUMBER NOT NULL,
    salary      NUMBER NOT NULL
);

ALTER TABLE emp_salary ADD CONSTRAINT emp_salary_pk PRIMARY KEY ( employee_id );

CREATE TABLE employee (
    employee_id                  NUMBER NOT NULL,
    fname                        VARCHAR2(50) NOT NULL,
    lname                        VARCHAR2(50) NOT NULL,
    employee_type_employeetypeid NUMBER
);

ALTER TABLE employee ADD CONSTRAINT employee_pk PRIMARY KEY ( employee_id );

CREATE TABLE employee_type (
    employeetypeid NUMBER NOT NULL,
    name           VARCHAR2(32),
    description    VARCHAR2(100)

);

ALTER TABLE employee_type ADD CONSTRAINT employee_type_pk PRIMARY KEY ( employeetypeid );

CREATE TABLE offerings (
    offering_id NUMBER NOT NULL,
    name        VARCHAR2(50),
    "Desc"      VARCHAR2(100),
    price       NUMBER
);

ALTER TABLE offerings ADD CONSTRAINT offerings_pk PRIMARY KEY ( offering_id );

CREATE TABLE payment (
    total_amount         NUMBER,
    customer_customer_id NUMBER NOT NULL,
    payment_id           NUMBER NOT NULL,
    payment_type         VARCHAR2(32) 

);

ALTER TABLE payment ADD CONSTRAINT payment_pk PRIMARY KEY ( payment_id );

CREATE TABLE product (
    offering_id NUMBER NOT NULL,
    product_id  NUMBER NOT NULL
);

ALTER TABLE product ADD CONSTRAINT product_pk PRIMARY KEY ( offering_id );

ALTER TABLE product ADD CONSTRAINT product_pkv1 UNIQUE ( product_id );

CREATE TABLE purchase (
    payment_payment_id    NUMBER NOT NULL,
    offerings_offering_id NUMBER NOT NULL,
    quantity              NUMBER
);

ALTER TABLE purchase ADD CONSTRAINT relation_25_pk PRIMARY KEY ( payment_payment_id,
                                                                 offerings_offering_id );

CREATE TABLE schedule (
    schedule_id          NUMBER NOT NULL,
    timeslot_timeslot_id NUMBER NOT NULL,
    employee_employee_id NUMBER NOT NULL
);

ALTER TABLE schedule ADD CONSTRAINT schedule_pk PRIMARY KEY ( schedule_id );

CREATE TABLE service (
    offering_id NUMBER NOT NULL,
    service_id  NUMBER NOT NULL
);

ALTER TABLE service ADD CONSTRAINT service_pk PRIMARY KEY ( offering_id );

ALTER TABLE service ADD CONSTRAINT service_pkv1 UNIQUE ( service_id );

CREATE TABLE services_provided (
    employee_employee_id NUMBER NOT NULL,
    service_offering_id  NUMBER NOT NULL
);

ALTER TABLE services_provided ADD CONSTRAINT services_pk PRIMARY KEY ( employee_employee_id,
                                                                       service_offering_id );

CREATE TABLE services_requested (
    est_total_time             NUMBER,
    appointment_appointment_id NUMBER NOT NULL,
    service_service_id         NUMBER NOT NULL
);

ALTER TABLE services_requested ADD CONSTRAINT services_requested_pk PRIMARY KEY ( service_service_id,
                                                                                  appointment_appointment_id );

CREATE TABLE supplier (
    supplier_id NUMBER NOT NULL,
    name        VARCHAR2(100)
);

ALTER TABLE supplier ADD CONSTRAINT supplier_pk PRIMARY KEY ( supplier_id );

CREATE TABLE supply_order (
    order_id             NUMBER NOT NULL,
    supplier_supplier_id NUMBER NOT NULL,
    delivery_date        DATE
);

ALTER TABLE supply_order ADD CONSTRAINT supply_order_pk PRIMARY KEY ( order_id );

CREATE TABLE supply_orderline (
    orderline_id          NUMBER NOT NULL,
    quantity              NUMBER,
    purchase_price        NUMBER,
    supply_order_order_id NUMBER NOT NULL,
    product_product_id    NUMBER NOT NULL
);

ALTER TABLE supply_orderline ADD CONSTRAINT supply_orderline_pk PRIMARY KEY ( orderline_id );

CREATE TABLE timeslot (
    timeslot_id NUMBER NOT NULL,
    day_of_week VARCHAR2(10),
    start_time  TIMESTAMP,
    end_time    TIMESTAMP
);

-- CONSTRAINTS
ALTER TABLE timeslot ADD CONSTRAINT timeslot_pk PRIMARY KEY ( timeslot_id );

ALTER TABLE appointment
    ADD CONSTRAINT appointment_customer_fk FOREIGN KEY ( customer_customer_id )
        REFERENCES customer ( customer_id );

ALTER TABLE appointment
    ADD CONSTRAINT appointment_employee_fk FOREIGN KEY ( employee_employee_id )
        REFERENCES employee ( employee_id );

ALTER TABLE availability
    ADD CONSTRAINT availability_employee_fk FOREIGN KEY ( employee_employee_id )
        REFERENCES employee ( employee_id );

ALTER TABLE availability
    ADD CONSTRAINT availability_timeslot_fk FOREIGN KEY ( timeslot_timeslot_id )
        REFERENCES timeslot ( timeslot_id );

ALTER TABLE emp_hourly
    ADD CONSTRAINT emp_hourly_employee_fk FOREIGN KEY ( employee_id )
        REFERENCES employee ( employee_id );

ALTER TABLE emp_salary
    ADD CONSTRAINT emp_salary_employee_fk FOREIGN KEY ( employee_id )
        REFERENCES employee ( employee_id );

ALTER TABLE employee
    ADD CONSTRAINT employee_employee_type_fk FOREIGN KEY ( employee_type_employeetypeid )
        REFERENCES employee_type ( employeetypeid );

ALTER TABLE payment
    ADD CONSTRAINT payment_customer_fk FOREIGN KEY ( customer_customer_id )
        REFERENCES customer ( customer_id );

ALTER TABLE product
    ADD CONSTRAINT product_offerings_fk FOREIGN KEY ( offering_id )
        REFERENCES offerings ( offering_id );

ALTER TABLE purchase
    ADD CONSTRAINT relation_25_offerings_fk FOREIGN KEY ( offerings_offering_id )
        REFERENCES offerings ( offering_id );

ALTER TABLE purchase
    ADD CONSTRAINT relation_25_payment_fk FOREIGN KEY ( payment_payment_id )
        REFERENCES payment ( payment_id );

ALTER TABLE schedule
    ADD CONSTRAINT schedule_employee_fk FOREIGN KEY ( employee_employee_id )
        REFERENCES employee ( employee_id );

ALTER TABLE schedule
    ADD CONSTRAINT schedule_timeslot_fk FOREIGN KEY ( timeslot_timeslot_id )
        REFERENCES timeslot ( timeslot_id );

ALTER TABLE service
    ADD CONSTRAINT service_offerings_fk FOREIGN KEY ( offering_id )
        REFERENCES offerings ( offering_id );

ALTER TABLE services_provided
    ADD CONSTRAINT services_employee_fk FOREIGN KEY ( employee_employee_id )
        REFERENCES employee ( employee_id );

ALTER TABLE services_requested
    ADD CONSTRAINT services_requested_appointment_fk FOREIGN KEY ( appointment_appointment_id )
        REFERENCES appointment ( appointment_id );

ALTER TABLE services_requested
    ADD CONSTRAINT services_requested_service_fk FOREIGN KEY ( service_service_id )
        REFERENCES service ( service_id );

ALTER TABLE services_provided
    ADD CONSTRAINT services_service_fk FOREIGN KEY ( service_offering_id )
        REFERENCES service ( offering_id );

ALTER TABLE supply_order
    ADD CONSTRAINT supply_order_supplier_fk FOREIGN KEY ( supplier_supplier_id )
        REFERENCES supplier ( supplier_id );

ALTER TABLE supply_orderline
    ADD CONSTRAINT supply_orderline_product_fk FOREIGN KEY ( product_product_id )
        REFERENCES product ( product_id );

ALTER TABLE supply_orderline
    ADD CONSTRAINT supply_orderline_supply_order_fk FOREIGN KEY ( supply_order_order_id )
        REFERENCES supply_order ( order_id );


-- INDEXES
-- index on primary keys to speed up location of records
CREATE UNIQUE INDEX Cust_indexPK ON CUSTOMER(customer_id);
CREATE UNIQUE INDEX Appt_indexPK ON APPOINTMENT(appointment_id);
CREATE UNIQUE INDEX Emp_indexPK ON EMPLOYEE(employee_id);
CREATE UNIQUE INDEX Off_indexPK ON OFFERING(offering_id);
CREATE UNIQUE INDEX Pay_indexPK ON PAYMENT(payment_id);
CREATE UNIQUE INDEX Pro_indexPK ON PRODUCT(product_id);
CREATE UNIQUE INDEX Sch_indexPK ON SCHEDULE(schedule_id);
CREATE UNIQUE INDEX Serv_indexPK ON SERVICE(service_id);
CREATE UNIQUE INDEX Supp_indexPK ON SUPPLIER(supplier_id);
CREATE UNIQUE INDEX SuppOrder_indexPK ON SUPPLY_ORDER(order_id);
CREATE UNIQUE INDEX SuppOrderLine_indexPK ON SUPPLY_ORDERLINE(orderline_id);
CREATE UNIQUE INDEX Time_indexPK ON TIMESLOT(timeslot_id);


-- PARTITIONING --
-- partition appointment table since this is a large table and 
-- we want to break up the data for faster searching
PARTITION BY HASH(appointment_id) PARTITIONS 3;

-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            19
-- CREATE INDEX                             0
-- ALTER TABLE                             42
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 